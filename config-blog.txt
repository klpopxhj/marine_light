    // const blogPostTemplate = path.resolve("src/templates/blog-post.js");


      // result.data.allContentfulBlogs.edges.forEach((edge) => {
        //   createPage({
        //     path: edge.node.slug,
        //     component: blogPostTemplate,
        //     context: {
        //       slug: edge.node.slug,
        //     },
        //   });
        // });


// {
//   allContentfulBlogs(limit: 100) {
//     edges {
//       node {
//         id
//         slug
//       }
//     }
//   }


    {/* {data.contentfulSiteInformation.menus
      .filter((item) => item === "Blogs")
      .map((t) => {
        return <Blogs data={data.allContentfulBlogs}></Blogs>;
      })} */}



      index.js

      // allContentfulBlogs(limit: 5, sort: { fields: createdAt, order: DESC }) {
//   edges {
//     node {
//       title
//       slug
//       featureImage {
//         fluid(maxWidth: 600) {
//           base64
//           aspectRatio
//           src
//           srcSet
//           srcWebp
//           srcSetWebp
//           sizes
//         }
//       }
//       createdAt
//     }
//   }
// }


// import Blogs from "../components/blogs";








var path = require("path");

exports.createPages = ({ graphql, boundActionCreators }) => {
  const { createPage } = boundActionCreators;
  return new Promise((resolve, reject) => {
    const blogPostTemplate = path.resolve("src/templates/blog-post.js");
    resolve(
      graphql(`
        {
          allContentfulBlogs(limit: 100) {
            edges {
              node {
                id
                slug
              }
            }
          }
        }
      `).then(result => {
        if (result.errors) {
          reject(result.errors);
        }
        result.data.allContentfulBlogs.edges.forEach(edge => {
          createPage({
            path: edge.node.slug,
            component: blogPostTemplate,
            context: {
              slug: edge.node.slug
            }
          });
        });
        return;
      })
    );
  });
};


           {/* {data.menus
                      .filter((item) => item === "Blogs")
                      .map((t) => {
                        return (
                          <li>
                            <Link to={`/#Blogs`}>Blogs</Link>
                          </li>
                        );
                      })} */}




                           {data.menus
                      .filter((item) => item === "Blogs")
                      .map((t) => {
                        return (
                          <li>
                            <Link to="/blogs">Blogs</Link>
                          </li>
                        );
                      })}